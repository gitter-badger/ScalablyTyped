[info ] InferredDependency.scala:20 Inferred dependencies Set(TsIdentLibrarySimple(react)) for TsIdentLibrarySimple(griddle-react) [id => griddle-react, phase => typescript, file => ../dist/module/module.d.ts] 
[debug] PhaseRunner.scala:82 Success [id => griddle-react, phase => typescript] 
[info ] Phase1ReadTypescript.scala:160 Preprocessing TsHelperFile(InFile(/home/tso/tmp/tso-cache/npm/node_modules/griddle-react/dist/module/module.d.ts),FromFolder(InFolder(/home/tso/tmp/tso-cache/npm/node_modules/griddle-react),TsIdentLibrarySimple(griddle-react)),TsIdentModule(None,List(griddle-react))) [id => griddle-react, phase => typescript] 
[info ] InferredDefaultModule.scala:39 Inferred module TsIdentModule(None,List(griddle-react)) [id => griddle-react, phase => typescript] 
[warn ] Phase1ReadTypescript.scala:200 Processing TsIdentLibrarySimple(griddle-react) [id => griddle-react, phase => typescript] 
[info ] ResolveTypeQueries.scala:125 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(originalConnect)))) [id => griddle-react, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(griddle-react) / TsExport() / TsExporteeTree() / TsDeclVar(connect) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:125 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(originalConnect)))) [id => griddle-react, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(griddle-react) / TsExport() / TsExporteeTree() / TsDeclNamespace(utils) / TsDeclVar(connect) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:125 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(components), TsIdentSimple(ColumnDefinition)))) [id => griddle-react, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(griddle-react) / TsExport() / TsExporteeTree() / TsDeclVar(ColumnDefinition) / TsTypeQuery())] 
[info ] ResolveTypeQueries.scala:125 Resolved TsTypeQuery(TsQIdent(List(TsIdentSimple(components), TsIdentSimple(RowDefinition)))) [id => griddle-react, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(griddle-react) / TsExport() / TsExporteeTree() / TsDeclVar(RowDefinition) / TsTypeQuery())] 
[info ] PreferTypeAlias.scala:45 Simplified to type alias [id => griddle-react, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(griddle-react) / TsDeclInterface(RowRenderProperties))] 
[info ] PreferTypeAlias.scala:45 Simplified to type alias [id => griddle-react, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(griddle-react) / TsDeclInterface(ColumnRenderProperties))] 
[info ] PreferTypeAlias.scala:45 Simplified to type alias [id => griddle-react, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(griddle-react) / TsDeclInterface(Griddle))] 
[info ] ExtractInterfaces.scala:37 Extracted anonymous interface TsIdentSimple(Anon_Next) [id => griddle-react, phase => typescript, scope => TreeScope(TsParsedFile() / TsDeclModule(griddle-react) / TsDeclInterface(GriddleInitialState) / TsMemberProperty(textProperties) / TsTypeObject())] 
[debug] PhaseRunner.scala:82 Success [id => griddle-react, phase => typescript] 
[warn ] Phase2ToScalaJs.scala:36 Processing griddle-react [id => griddle-react, phase => scala.js] 
[debug] PhaseRunner.scala:82 Success [id => griddle-react, phase => scala.js] 
[warn ] PhaseRunner.scala:68 Failed because of, [immutable => Compilation failed] [id => griddle-react, phase => build] 
[error] PhaseRunner.scala:86 Failure, [immutable => Compilation failed] [id => griddle-react, phase => build] 
